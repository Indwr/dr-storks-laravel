{"version":3,"sources":["webpack:///./resources/assets/js/invoices/invoice.js"],"names":["tableName","$","DataTable","processing","serverSide","ajax","url","invoiceUrl","data","status","find","val","columnDefs","targets","defaultContent","columns","row","id","invoice_id","name","patientUrl","patient","user","full_name","render","invoice_date","moment","format","isEmpty","amount","getCurrentCurrencyClass","addCommas","discount","toFixed","prepareTemplateRender","change","reload","page","draw","select2","width","document","on","event","currentTarget","deleteItem"],"mappings":"mBACA,IAAIA,EAAY,eAChBC,EAAED,GAAWE,UAAU,CACnBC,YAAY,EACZC,YAAY,EACZ,MAAS,CAAC,CAAC,EAAG,SACdC,KAAM,CACFC,IAAKC,WACLC,KAAM,SAAUA,GACZA,EAAKC,OAASR,EAAE,kBACZS,KAAK,mBACLC,QAGZC,WAAY,CACR,CACI,QAAW,CAAC,GACZ,UAAa,cACb,MAAS,OAEb,CACI,QAAW,CAAC,GACZ,UAAa,aACb,MAAS,OAEb,CACI,QAAW,CAAC,GACZ,UAAa,YACb,MAAS,MAEb,CACI,QAAW,CAAC,GACZ,WAAa,EACb,UAAa,cACb,MAAS,MAEb,CACI,QAAW,CAAC,GACZ,SAAW,GAEf,CACIC,QAAS,OACTC,eAAgB,QAGxBC,QAAS,CACL,CACIP,KAAM,SAAUQ,GAEZ,MAAO,aADQT,WAAa,IAAMS,EAAIC,IACN,KAC5BD,EAAIE,WAAa,QAEzBC,KAAM,cAEV,CACIX,KAAM,SAAUQ,GAEZ,MAAO,aADQI,WAAa,IAAMJ,EAAIK,QAAQJ,IACd,KAC5BD,EAAIK,QAAQC,KAAKC,UAAY,QAErCJ,KAAM,MAEV,CACIX,KAAM,SAAUQ,GACZ,OAAOA,GAEXQ,OAAQ,SAAUR,GACd,OAAyB,OAArBA,EAAIS,aACG,MAGJC,OAAOV,EAAIS,cAAcE,OAAO,cAE3CR,KAAM,gBAEV,CACIX,KAAM,SAAUQ,GACZ,OAAQY,QAAQZ,EAAIa,QAIG,MAJO,yBAC1BC,0BAA4B,IAC5BC,WAAWf,EAAIa,OACVb,EAAIa,OAASb,EAAIgB,SAAW,KAAMC,QACnC,IAAM,QAElBd,KAAM,UAEV,CACIX,KAAM,eACNW,KAAM,UAEV,CACIX,KAAM,SAAUQ,GACZ,IAAIV,EAAMC,WAAa,IAAMS,EAAIC,GAC7BT,EAAO,CACP,CACI,GAAMQ,EAAIC,GACV,IAAOX,EAAM,QACb,QAAWA,IAEnB,OAAO4B,sBAAsB,yBAA0B1B,IACxDW,KAAM,0BAEb,CACIX,KAAM,0BACNW,KAAM,4BAGd,eAAkB,WACdlB,EAAE,kBAAkBkC,QAAO,WACvBlC,EAAED,GAAWE,YAAYG,KAAK+B,OAAO,MAAM,GAC3CnC,EAAED,GAAWE,YAAYmC,KAAK,YAAYC,KAAK,cAK3DrC,EAAE,kBAAkBsC,QAAQ,CACxBC,MAAO,SAGXvC,EAAEwC,UAAUC,GAAG,QAAS,eAAe,SAAUC,GAC7C,IAAI1B,EAAKhB,EAAE0C,EAAMC,eAAepC,KAAK,MACrCqC,WAAWtC,WAAa,IAAMU,EAAIjB,EAAW,e","file":"/assets/js/invoices/invoice.js","sourcesContent":["'use strict';\nlet tableName = '#tblInvoices';\n$(tableName).DataTable({\n    processing: true,\n    serverSide: true,\n    'order': [[2, 'desc']],\n    ajax: {\n        url: invoiceUrl,\n        data: function (data) {\n            data.status = $('#status_filter').\n                find('option:selected').\n                val();\n        },\n    },\n    columnDefs: [\n        {\n            'targets': [0],\n            'className': 'text-center',\n            'width': '10%',\n        },\n        {\n            'targets': [3],\n            'className': 'text-right',\n            'width': '10%',\n        },\n        {\n            'targets': [4],\n            'className': 'text-left',\n            'width': '8%',\n        },\n        {\n            'targets': [5],\n            'orderable': false,\n            'className': 'text-center',\n            'width': '8%',\n        },\n        {\n            'targets': [6],\n            'visible': false,\n        },\n        {\n            targets: '_all',\n            defaultContent: 'N/A',\n        },\n    ],\n    columns: [\n        {\n            data: function (row) {\n                let showLink = invoiceUrl + '/' + row.id;\n                return '<a href=\"' + showLink + '\">' +\n                    row.invoice_id + '</a>';\n            },\n            name: 'invoice_id',\n        },\n        {\n            data: function (row) {\n                let showLink = patientUrl + '/' + row.patient.id;\n                return '<a href=\"' + showLink + '\">' +\n                    row.patient.user.full_name + '</a>';\n            },\n            name: 'id',\n        },\n        {\n            data: function (row) {\n                return row;\n            },\n            render: function (row) {\n                if (row.invoice_date === null) {\n                    return 'N/A';\n                }\n\n                return moment(row.invoice_date).format('Do MMM, Y');\n            },\n            name: 'invoice_date',\n        },\n        {\n            data: function (row) {\n                return !isEmpty(row.amount) ? '<p class=\"cur-margin\">' +\n                    getCurrentCurrencyClass() + ' ' +\n                    addCommas((row.amount -\n                        (row.amount * row.discount / 100)).toFixed(\n                        2)) + '</p>' : 'N/A';\n            },\n            name: 'amount',\n        },\n        {\n            data: 'status_label',\n            name: 'status',\n        },\n        {\n            data: function (row) {\n                let url = invoiceUrl + '/' + row.id;\n                let data = [\n                    {\n                        'id': row.id,\n                        'url': url + '/edit',\n                        'viewUrl': url,\n                    }];\n                return prepareTemplateRender('#invoiceActionTemplate', data);\n            }, name: 'patient.user.last_name',\n        },\n        {\n            data: 'patient.user.first_name',\n            name: 'patient.user.first_name',\n        },\n    ],\n    'fnInitComplete': function () {\n        $('#status_filter').change(function () {\n            $(tableName).DataTable().ajax.reload(null, true);\n            $(tableName).DataTable().page('previous').draw('page');\n        });\n    },\n});\n\n$('#status_filter').select2({\n    width: '100%',\n});\n\n$(document).on('click', '.delete-btn', function (event) {\n    let id = $(event.currentTarget).data('id');\n    deleteItem(invoiceUrl + '/' + id, tableName, 'Invoice');\n});\n"],"sourceRoot":""}