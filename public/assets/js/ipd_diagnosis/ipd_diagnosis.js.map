{"version":3,"sources":["webpack:///./resources/assets/js/ipd_diagnosis/ipd_diagnosis.js"],"names":["$","document","ready","tableName","DataTable","processing","serverSide","ajax","url","ipdDiagnosisUrl","data","id","ipdPatientDepartmentId","columnDefs","targets","defaultContent","columns","name","row","render","report_date","moment","format","ipd_diagnosis_document_url","downloadDiagnosisDocumentUrl","prepareTemplateRender","datetimepicker","DatetimepickerDefaults","useCurrent","sideBySide","minDate","ipdPatientCaseDate","widgetPositioning","horizontal","vertical","on","event","currentTarget","deleteItem","preventDefault","loadingButton","jQuery","this","find","button","ipdDiagnosisCreateUrl","newRecord","ajaxCallIsRunning","ajaxCallInProgress","ipdDiagnosisId","renderDataDiagnosis","window","type","success","result","ext","split","pop","toLowerCase","attr","pdfDocumentImageUrl","docxDocumentImageUrl","val","report_type","description","show","hide","modal","ajaxCallCompleted","error","manageAjaxErrors","editRecord","resetModalForm","defaultDocumentImageUrl","extension","isValidDocument","isEmpty","html","displayDocument","inputSelector","validationMessageSelector","inArray"],"mappings":"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","file":"/assets/js/ipd_diagnosis/ipd_diagnosis.js","sourcesContent":["$(document).ready(function () {\n    'use strict';\n\n    let tableName = '#tblIpdDiagnoses';\n    $(tableName).DataTable({\n        processing: true,\n        serverSide: true,\n        'order': [[1, 'desc']],\n        ajax: {\n            url: ipdDiagnosisUrl,\n            data: function (data) {\n                data.id = ipdPatientDepartmentId;\n            },\n        },\n        columnDefs: [\n            {\n                'targets': [0, 1, 2],\n                'width': '10%',\n            },\n            {\n                'targets': [3],\n                'width': '20%',\n            },\n            {\n                'targets': [4],\n                'className': 'text-center',\n                'orderable': false,\n                'width': '4%',\n            },\n            {\n                targets: '_all',\n                defaultContent: 'N/A',\n            },\n        ],\n        columns: [\n            {\n                data: 'report_type',\n                name: 'report_type',\n            },\n            {\n                data: function (row) {\n                    return row;\n                },\n                render: function (row) {\n                    if (row.report_date === null) {\n                        return 'N/A';\n                    }\n\n                    return moment(row.report_date).format('Do MMM, Y h:mm A');\n                },\n                name: 'report_date',\n            },\n            {\n                data: function (row) {\n                    if (row.ipd_diagnosis_document_url != '') {\n                        let downloadLink = downloadDiagnosisDocumentUrl + '/' +\n                            row.id;\n                        return '<a href=\"' + downloadLink + '\">' + 'Download' +\n                            '</a>';\n                    } else\n                        return 'N/A';\n                },\n                name: 'description',\n            },\n            {\n                data: 'description',\n                name: 'description',\n            },\n            {\n                data: function (row) {\n                    let data = [{ 'id': row.id }];\n                    return prepareTemplateRender('#ipdDiagnosisActionTemplate',\n                        data);\n                }, name: 'description',\n            },\n        ],\n    });\n\n    $('#reportDate, #editReportDate').datetimepicker(DatetimepickerDefaults({\n        format: 'YYYY-MM-DD HH:mm:ss',\n        useCurrent: true,\n        sideBySide: true,\n        minDate: ipdPatientCaseDate,\n        widgetPositioning: {\n            horizontal: 'left',\n            vertical: 'bottom',\n        },\n    }));\n\n    $(document).on('click', '.ipdDignosis-delete-btn', function (event) {\n        let id = $(event.currentTarget).data('id');\n        deleteItem(ipdDiagnosisUrl + '/' + id, tableName, 'IPD Diagnosis');\n    });\n\n    $(document).on('submit', '#addNewForm', function (event) {\n        event.preventDefault();\n        let loadingButton = jQuery(this).find('#btnSave');\n        loadingButton.button('loading');\n        let data = {\n            'formSelector': $(this),\n            'url': ipdDiagnosisCreateUrl,\n            'type': 'POST',\n            'tableSelector': tableName,\n        };\n        newRecord(data, loadingButton, '#addModal');\n    });\n\n    $(document).on('click', '.ipdDignosis-edit-btn', function (event) {\n        if (ajaxCallIsRunning) {\n            return;\n        }\n        ajaxCallInProgress();\n        let ipdDiagnosisId = $(event.currentTarget).data('id');\n        renderDataDiagnosis(ipdDiagnosisId);\n    });\n\n    window.renderDataDiagnosis = function (id) {\n        $.ajax({\n            url: ipdDiagnosisUrl + '/' + id + '/edit',\n            type: 'GET',\n            success: function (result) {\n                if (result.success) {\n                    let ext = result.data.ipd_diagnosis_document_url.split('.').\n                        pop().\n                        toLowerCase();\n                    if (ext == 'pdf') {\n                        $('#editPreviewImage').attr('src', pdfDocumentImageUrl);\n                    } else if ((ext == 'docx') || (ext == 'doc')) {\n                        $('#editPreviewImage').\n                            attr('src', docxDocumentImageUrl);\n                    } else {\n                        if (result.data.ipd_diagnosis_document_url != '') {\n                            $('#editPreviewImage').\n                                attr('src',\n                                    result.data.ipd_diagnosis_document_url);\n                        }\n                    }\n                    $('#ipdDiagnosisId').val(result.data.id);\n                    $('#editReportType').val(result.data.report_type);\n                    $('#editReportDate').val(result.data.report_date);\n                    $('#editDescription').val(result.data.description);\n                    if (result.data.ipd_diagnosis_document_url != '') {\n                        $('#documentViewUrl').show();\n                        $('#documentViewUrl').\n                            attr('href',\n                                result.data.ipd_diagnosis_document_url);\n                    } else {\n                        $('#documentViewUrl').hide();\n                    }\n                    $('#EditModal').modal('show');\n                    ajaxCallCompleted();\n                }\n            },\n            error: function (result) {\n                manageAjaxErrors(result);\n            },\n        });\n    };\n\n    $(document).on('submit', '#editForm', function (event) {\n        event.preventDefault();\n        let loadingButton = jQuery(this).find('#btnEditSave');\n        loadingButton.button('loading');\n        let id = $('#ipdDiagnosisId').val();\n        let url = ipdDiagnosisUrl + '/' + id;\n        let data = {\n            'formSelector': $(this),\n            'url': url,\n            'type': 'POST',\n            'tableSelector': tableName,\n        };\n        editRecord(data, loadingButton);\n    });\n\n    $('#addModal').on('hidden.bs.modal', function () {\n        resetModalForm('#addNewForm', '#validationErrorsBox');\n        $('#previewImage').attr('src', defaultDocumentImageUrl);\n    });\n\n    $('#editModal').on('hidden.bs.modal', function () {\n        resetModalForm('#editForm', '#editValidationErrorsBox');\n    });\n});\n\n$(document).on('change', '#documentImage', function () {\n    let extension = isValidDocument($(this), '#validationErrorsBox');\n    if (!isEmpty(extension) && extension != false) {\n        $('#validationErrorsBox').html('').hide();\n        displayDocument(this, '#previewImage', extension);\n    }\n});\n\n$(document).on('change', '#editDocumentImage', function () {\n    let extension = isValidDocument($(this), '#editValidationErrorsBox');\n    if (!isEmpty(extension) && extension != false) {\n        $('#editValidationErrorsBox').html('').hide();\n        displayDocument(this, '#editPreviewImage', extension);\n    }\n});\n\nwindow.isValidDocument = function (inputSelector, validationMessageSelector) {\n    let ext = $(inputSelector).val().split('.').pop().toLowerCase();\n    if ($.inArray(ext, ['png', 'jpg', 'jpeg', 'pdf', 'doc', 'docx']) == -1) {\n        $(inputSelector).val('');\n        $(validationMessageSelector).\n            html(\n                'The document must be a file of type: jpeg, jpg, png, pdf, doc, docx.').\n            show();\n        return false;\n    }\n    return ext;\n};\n"],"sourceRoot":""}