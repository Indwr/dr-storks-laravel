{"version":3,"sources":["webpack:///./resources/assets/js/document/document.js"],"names":["$","document","ready","filename","tableName","DataTable","processing","serverSide","ajax","url","documentsUrl","columnDefs","targets","defaultContent","columns","data","row","downloadDocumentUrl","id","name","title","prepareTemplateRender","select2","width","on","event","currentTarget","deleteItem","change","this","val","preventDefault","html","show","text","focus","loadingButton","jQuery","find","button","documentsCreateUrl","newRecord","ajaxCallIsRunning","ajaxCallInProgress","documentId","renderData","window","type","success","result","ext","document_url","split","pop","toLowerCase","attr","pdfDocumentImageUrl","docxDocumentImageUrl","document_type_id","trigger","patient_id","notes","modal","ajaxCallCompleted","error","manageAjaxErrors","editRecord","resetModalForm","defaultDocumentImageUrl","extension","isValidDocument","isEmpty","hide","displayDocument","inputSelector","validationMessageSelector","inArray"],"mappings":"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","file":"/assets/js/document/document.js","sourcesContent":["$(document).ready(function () {\n    'use strict';\n\n    let tableName = '#tblDocuments';\n    $(tableName).DataTable({\n        processing: true,\n        serverSide: true,\n        'order': [[3, 'asc']],\n        ajax: {\n            url: documentsUrl,\n        },\n        columnDefs: [\n            {\n                'targets': [0],\n                'className': 'text-center',\n                'width': '10%',\n            },\n            {\n                'targets': [4],\n                'orderable': false,\n                'className': 'text-center',\n                'width': '6%',\n            },\n            {\n                'targets': [0],\n                'orderable': false,\n                'width': '8%',\n            },\n            {\n                targets: '_all',\n                defaultContent: 'N/A',\n            },\n        ],\n        columns: [\n            {\n                data: function (row) {\n                    let downloadLink = downloadDocumentUrl + '/' + row.id;\n                    return '<a href=\"' + downloadLink + '\">' + 'Download' +\n                        '</a>';\n                },\n                name: 'title',\n            },\n            {\n                data: function (row) {\n                    let showLink = documentsUrl + '/' + row.id;\n                    return '<a href=\"' + showLink + '\">' + row.title + '</a>';\n                },\n                name: 'title',\n            },\n            {\n                data: 'document_type.name',\n                name: 'documentType.name',\n            },\n            {\n                data: 'patient.user.full_name',\n                name: 'patient.user.first_name',\n            },\n            {\n                data: function (row) {\n                    let data = [{ 'id': row.id }];\n                    return prepareTemplateRender('#documentsActionTemplate',\n                        data);\n                }, name: 'patient.user.last_name',\n            },\n        ],\n    });\n\n    $('#patientId, #documentTypeId, #editPatientId, #editDocumentTypeId').\n        select2({\n            width: '100%',\n        });\n\n    $(document).on('click', '.delete-btn', function (event) {\n        let id = $(event.currentTarget).data('id');\n        deleteItem(documentsUrl + '/' + id, tableName, 'Document');\n    });\n\n    var filename;\n    $('#documentImage').change(function () {\n        filename = $(this).val();\n    });\n\n    $(document).on('submit', '#addNewForm', function (event) {\n        event.preventDefault();\n        if (filename == null || filename == '') {\n            $('#validationErrorsBox').\n                html(\n                    'Please select attachment').show();\n            return false;\n        }\n        if ($('#validationErrorsBox').text() !== '') {\n            $('#documentImage').focus();\n            return false;\n        }\n        let loadingButton = jQuery(this).find('#btnSave');\n        loadingButton.button('loading');\n        let data = {\n            'formSelector': $(this),\n            'url': documentsCreateUrl,\n            'type': 'POST',\n            'tableSelector': tableName,\n        };\n        newRecord(data, loadingButton, '#addModal');\n    });\n\n    $(document).on('click', '.edit-btn', function (event) {\n        if (ajaxCallIsRunning) {\n            return;\n        }\n        ajaxCallInProgress();\n        let documentId = $(event.currentTarget).data('id');\n        renderData(documentId);\n    });\n\n    window.renderData = function (id) {\n        $.ajax({\n            url: documentsUrl + '/' + id + '/edit',\n            type: 'GET',\n            success: function (result) {\n                if (result.success) {\n                    let ext = result.data.document_url.split('.').\n                        pop().\n                        toLowerCase();\n                    if (ext == 'pdf') {\n                        $('#editPreviewImage').attr('src', pdfDocumentImageUrl);\n                    } else if ((ext == 'docx') || (ext == 'doc')) {\n                        $('#editPreviewImage').\n                            attr('src', docxDocumentImageUrl);\n                    } else {\n                        $('#editPreviewImage').\n                            attr('src', result.data.document_url);\n                    }\n\n                    $('#editDocumentTypeId').\n                        val(result.data.document_type_id).\n                        trigger('change.select2');\n                    $('#editPatientId').\n                        val(result.data.patient_id).\n                        trigger('change.select2');\n                    $('#editTitle').val(result.data.title);\n                    $('#documentUrl').attr('href', result.data.document_url);\n                    $('#documentId').val(result.data.id);\n                    $('#editNotes').val(result.data.notes);\n                    $('#EditModal').modal('show');\n                    ajaxCallCompleted();\n                }\n            },\n            error: function (result) {\n                manageAjaxErrors(result);\n            },\n        });\n    };\n\n    $(document).on('submit', '#editForm', function (event) {\n        event.preventDefault();\n        let loadingButton = jQuery(this).find('#btnEditSave');\n        loadingButton.button('loading');\n        let id = $('#documentId').val();\n        let url = documentsUrl + '/' + id + '/update';\n        let data = {\n            'formSelector': $(this),\n            'url': url,\n            'type': 'POST',\n            'tableSelector': tableName,\n        };\n        editRecord(data, loadingButton);\n    });\n\n    $('#addModal').on('hidden.bs.modal', function () {\n        resetModalForm('#addNewForm', '#validationErrorsBox');\n        $('#previewImage').attr('src', defaultDocumentImageUrl);\n    });\n\n    $('#editModal').on('hidden.bs.modal', function () {\n        resetModalForm('#editForm', '#editDocumentValidationErrorsBox');\n    });\n});\n\n$(document).on('change', '#documentImage', function () {\n    let extension = isValidDocument($(this), '#validationErrorsBox');\n    if (!isEmpty(extension) && extension != false) {\n        $('#validationErrorsBox').html('').hide();\n        displayDocument(this, '#previewImage', extension);\n    }\n});\n\n$(document).on('change', '#editDocumentImage', function () {\n    let extension = isValidDocument($(this),\n        '#editDocumentValidationErrorsBox');\n    if (!isEmpty(extension) && extension != false) {\n        $('#editDocumentValidationErrorsBox').html('').hide();\n        displayDocument(this, '#editPreviewImage', extension);\n    }\n});\n\nwindow.isValidDocument = function (inputSelector, validationMessageSelector) {\n    let ext = $(inputSelector).val().split('.').pop().toLowerCase();\n    if ($.inArray(ext, ['png', 'jpg', 'jpeg', 'pdf', 'doc', 'docx']) == -1) {\n        $(inputSelector).val('');\n        $(validationMessageSelector).\n            html(\n                'The document must be a file of type: jpeg, jpg, png, pdf, doc, docx.').\n            show();\n        return false;\n    }\n    return ext;\n};\n"],"sourceRoot":""}