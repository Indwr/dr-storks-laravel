{"version":3,"sources":["webpack:///./resources/assets/js/ipd_charges/ipd_charges.js"],"names":["deleteItemAjax","url","tableId","header","callFunction","$","ajax","type","dataType","success","obj","location","reload","swal","title","text","timer","eval","error","data","responseJSON","message","document","ready","tableName","DataTable","processing","serverSide","ipdChargesUrl","id","ipdPatientDepartmentId","columnDefs","actionAcoumnVisibal","targets","defaultContent","columns","row","render","date","moment","format","name","charge_type_id","isEmpty","standard_charge","getCurrentCurrencyClass","addCommas","applied_charge","prepareTemplateRender","prop","datetimepicker","DatetimepickerDefaults","useCurrent","sideBySide","minDate","ipdPatientCaseDate","select2","width","on","event","currentTarget","showCancelButton","closeOnConfirm","showLoaderOnConfirm","confirmButtonColor","cancelButtonColor","cancelButtonText","confirmButtonText","e","onceOnEditRender","isChargeEdit","this","val","chargeCategoryUrl","beforeSend","makeChargesBtnDisabled","length","empty","removeAttr","each","i","v","append","attr","trigger","editChargeCategoryId","chargeUrl","editChargeId","chargeStandardRateUrl","isEdit","ipdChargeId","preventDefault","loadingButton","jQuery","find","button","formData","FormData","ipdChargesCreateUrl","processData","contentType","result","displaySuccessMessage","modal","printErrorMessage","complete","ajaxCallIsRunning","ajaxCallInProgress","ipdChargesId","renderChargesData","editAppliedCharge","window","charge_category_id","charge_id","ajaxCallCompleted","manageAjaxErrors","editRecord","reset","isChargeOnEdit"],"mappings":"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","file":"/assets/js/ipd_charges/ipd_charges.js","sourcesContent":["$(document).ready(function () {\n    'use strict';\n\n    let tableName = '#tblIpdCharges';\n    $(tableName).DataTable({\n        processing: true,\n        serverSide: true,\n        'order': [[0, 'desc']],\n        ajax: {\n            url: ipdChargesUrl,\n            data: function (data) {\n                data.id = ipdPatientDepartmentId;\n            },\n        },\n        columnDefs: [\n            {\n                'targets': [0, 1, 2, 3],\n                'width': '15%',\n            },\n            {\n                'targets': [4, 5],\n                'className': 'text-right',\n                'width': '15%',\n            },\n            {\n                'targets': [6],\n                'className': 'text-center',\n                'orderable': false,\n                'width': '4%',\n                'visible': actionAcoumnVisibal,\n            },\n            {\n                targets: '_all',\n                defaultContent: 'N/A',\n            },\n        ],\n        columns: [\n            {\n                data: function (row) {\n                    return row;\n                },\n                render: function (row) {\n                    if (row.date === null) {\n                        return 'N/A';\n                    }\n\n                    return moment(row.date).format('Do MMM, Y');\n                },\n                name: 'date',\n            },\n            {\n                data: function (row) {\n                    if (row.charge_type_id === 1)\n                        return 'Procedures';\n                    else if (row.charge_type_id === 2)\n                        return 'Investigations';\n                    else if (row.charge_type_id === 3)\n                        return 'Supplier';\n                    else if (row.charge_type_id === 4)\n                        return 'Operation Theatre';\n                    else\n                        return 'Others';\n                },\n                name: 'charge_type_id',\n            },\n            {\n                data: 'chargecategory.name',\n                name: 'chargecategory.name',\n            },\n            {\n                data: 'charge.code',\n                name: 'charge.code',\n            },\n            {\n                data: function (row) {\n                    return !isEmpty(row.standard_charge)\n                        ? '<p class=\"cur-margin\">' +\n                        getCurrentCurrencyClass() + ' ' +\n                        addCommas(row.standard_charge) + '</p>'\n                        : 'N/A';\n                },\n                name: 'standard_charge',\n            },\n            {\n                data: function (row) {\n                    return !isEmpty(row.applied_charge)\n                        ? '<p class=\"cur-margin\">' +\n                        getCurrentCurrencyClass() + ' ' +\n                        addCommas(row.applied_charge) + '</p>'\n                        : 'N/A';\n                },\n                name: 'applied_charge',\n            },\n            {\n                data: function (row) {\n                    let data = [{ 'id': row.id }];\n                    return prepareTemplateRender(\n                        '#ipdChargesActionTemplate',\n                        data);\n                }, name: 'id',\n            },\n        ],\n    });\n    $('#btnIpdChargeSave,#btnEditCharges').prop('disabled', true);\n    $('#ipdChargeDate, #ipdEditChargeDate').\n        datetimepicker(DatetimepickerDefaults({\n            format: 'YYYY-MM-DD',\n            useCurrent: false,\n            sideBySide: true,\n            minDate: ipdPatientCaseDate,\n        }));\n    $('#chargeTypeId, #chargeCategoryId, #chargeId, #editChargeTypeId, #editChargeCategoryId, #editChargeId').\n        select2({\n            width: '100%',\n        });\n\n    $(document).on('click', '.ipdCharegs-delete-btn', function (event) {\n        let id = $(event.currentTarget).data('id');\n        let url = ipdChargesUrl + '/' + id;\n        let header = 'IPD Charge';\n        swal({\n            title: 'Delete !',\n            text: 'Are you sure want to delete this \"' + header + '\" ?',\n            type: 'warning',\n            showCancelButton: true,\n            closeOnConfirm: false,\n            showLoaderOnConfirm: true,\n            confirmButtonColor: '#5cb85c',\n            cancelButtonColor: '#d33',\n            cancelButtonText: 'No',\n            confirmButtonText: 'Yes',\n        }, function () {\n            deleteItemAjax(url, tableName, header);\n        });\n    });\n\n    $('#chargeTypeId, #editChargeTypeId').\n        on('change', function (e, onceOnEditRender) {\n            let isChargeEdit = $(this).data('is-charge-edit');\n            if ($(this).val() !== '') {\n                $.ajax({\n                    url: chargeCategoryUrl,\n                    type: 'get',\n                    dataType: 'json',\n                    data: { id: $(this).val() },\n                    beforeSend: function () {\n                        makeChargesBtnDisabled(isChargeEdit);\n                    },\n                    success: function (data) {\n                        if (data.data.length !== 0) {\n                            $((!isChargeEdit)\n                                ? '#chargeCategoryId'\n                                : '#editChargeCategoryId').empty();\n                            $((!isChargeEdit)\n                                ? '#chargeCategoryId'\n                                : '#editChargeCategoryId').\n                                removeAttr('disabled');\n                            $.each(data.data, function (i, v) {\n                                $((!isChargeEdit)\n                                    ? '#chargeCategoryId'\n                                    : '#editChargeCategoryId').\n                                    append($('<option></option>').\n                                        attr('value', i).\n                                        text(v));\n                            });\n                            if (!isChargeEdit)\n                                $('#chargeCategoryId').trigger('change');\n                            else {\n                                if (typeof onceOnEditRender == 'undefined')\n                                    $('#editChargeCategoryId').\n                                        trigger('change');\n                                else {\n                                    $('#editChargeCategoryId').\n                                        val(editChargeCategoryId).\n                                        trigger('change', onceOnEditRender);\n                                }\n                            }\n                            $((!isChargeEdit)\n                                ? '#btnIpdChargeSave'\n                                : '#btnEditCharges').prop('disabled', false);\n                        } else {\n                            $((!isChargeEdit)\n                                ? '#chargeCategoryId, #chargeId'\n                                : '#editChargeCategoryId, #editChargeId').\n                                empty();\n                            $((!isChargeEdit)\n                                ? '#ipdStandardCharge, #ipdAppliedCharge'\n                                : '#editIpdStandardCharge, #editIpdAppliedCharge').\n                                val('');\n                            $((!isChargeEdit)\n                                ? '#chargeCategoryId, #chargeId, #btnIpdChargeSave'\n                                : '#editChargeCategoryId, #editChargeId, #btnEditCharges').\n                                prop('disabled', true);\n                        }\n                    },\n                });\n            }\n            $((!isChargeEdit)\n                ? '#chargeCategoryId, #chargeId'\n                : '#editChargeCategoryId, #editChargeId').empty();\n            $((!isChargeEdit)\n                ? '#ipdStandardCharge, #ipdAppliedCharge'\n                : '#editIpdStandardCharge, #editIpdAppliedCharge').val('');\n            $((!isChargeEdit)\n                ? '#chargeCategoryId, #chargeId'\n                : '#editChargeCategoryId, #editChargeId').\n                prop('disabled', true);\n        });\n\n    $('#chargeCategoryId, #editChargeCategoryId').\n        on('change', function (e, onceOnEditRender) {\n            let isChargeEdit = $(this).data('is-charge-edit');\n            if ($(this).val() !== '') {\n                $.ajax({\n                    url: chargeUrl,\n                    type: 'get',\n                    dataType: 'json',\n                    data: { id: $(this).val() },\n                    beforeSend: function () {\n                        makeChargesBtnDisabled(isChargeEdit);\n                    },\n                    success: function (data) {\n                        if (data.data.length !== 0) {\n                            $((!isChargeEdit) ? '#chargeId' : '#editChargeId').\n                                empty();\n                            $((!isChargeEdit) ? '#chargeId' : '#editChargeId').\n                                removeAttr('disabled');\n                            $.each(data.data, function (i, v) {\n                                $((!isChargeEdit)\n                                    ? '#chargeId'\n                                    : '#editChargeId').\n                                    append($('<option></option>').\n                                        attr('value', i).\n                                        text(v));\n                            });\n                            if (!isChargeEdit)\n                                $('#chargeId').trigger('change');\n                            else {\n                                if (typeof onceOnEditRender == 'undefined')\n                                    $('#editChargeId').trigger('change');\n                                else\n                                    $('#editChargeId').\n                                        val(editChargeId).\n                                        trigger('change', onceOnEditRender);\n                            }\n                        } else {\n                            $((!isChargeEdit) ? '#chargeId' : '#editChargeId').\n                                prop('disabled', true);\n                        }\n                    },\n                });\n            }\n            $((!isChargeEdit) ? '#chargeId' : '#editChargeId').empty();\n            $((!isChargeEdit) ? '#chargeId' : '#editChargeId').\n                prop('disabled', true);\n        });\n\n    $('#chargeId, #editChargeId').on('change', function (e, onceOnEditRender) {\n        let isChargeEdit = $(this).data('is-charge-edit');\n        $.ajax({\n            url: chargeStandardRateUrl,\n            type: 'get',\n            dataType: 'json',\n            data: {\n                id: $(this).val(),\n                isEdit: isChargeEdit,\n                onceOnEditRender: onceOnEditRender,\n                ipdChargeId: $('#ipdChargesId').val(),\n            },\n            beforeSend: function () {\n                makeChargesBtnDisabled(isChargeEdit);\n            },\n            success: function (data) {\n                if (!isChargeEdit) {\n                    $('#ipdStandardCharge, #ipdAppliedCharge').val(data.data);\n                    $('#btnIpdChargeSave').prop('disabled', false);\n                } else {\n                    if (data.data != null) {\n                        $('#editIpdStandardCharge').\n                            val(data.data.standard_charge);\n                        $('#editIpdAppliedCharge').\n                            val(data.data.applied_charge);\n                        $('.price-input').trigger('input');\n                        $('#btnEditCharges').prop('disabled', false);\n                    }\n                }\n\n            },\n        });\n    });\n\n    $(document).on('submit', '#addIpdChargeNewForm', function (event) {\n        event.preventDefault();\n        let loadingButton = jQuery(this).find('#btnIpdChargeSave');\n        loadingButton.button('loading');\n\n        var formData = new FormData($(this)[0]);\n        $.ajax({\n            url: ipdChargesCreateUrl,\n            type: 'POST',\n            dataType: 'json',\n            data: formData,\n            processData: false,\n            contentType: false,\n            success: function success (result) {\n                if (result.success) {\n                    displaySuccessMessage(result.message);\n                    $('#addIpdChargesModal').modal('hide');\n                    location.reload();\n                }\n            },\n            error: function error (result) {\n                printErrorMessage('#ipdChargevalidationErrorsBox', result);\n            },\n            complete: function complete () {\n                loadingButton.button('reset');\n                $('#btnIpdChargeSave').attr('disabled', true);\n            },\n        });\n\n    });\n\n    $(document).on('click', '.edit-charges-btn', function (event) {\n        if (ajaxCallIsRunning) {\n            return;\n        }\n        ajaxCallInProgress();\n        let ipdChargesId = $(event.currentTarget).data('id');\n        renderChargesData(ipdChargesId);\n    });\n\n    let editChargeCategoryId = null;\n    let editChargeId = null;\n    let editStandardRate = null;\n    let editAppliedCharge = null;\n    window.renderChargesData = function (id) {\n        $.ajax({\n            url: ipdChargesUrl + '/' + id + '/edit',\n            type: 'GET',\n            success: function (result) {\n                if (result.success) {\n                    editChargeCategoryId = result.data.charge_category_id;\n                    editChargeId = result.data.charge_id;\n                    editStandardRate = result.data.standard_charge;\n                    editAppliedCharge = result.data.applied_charge;\n                    $('#ipdChargesId').val(result.data.id);\n                    $('#ipdEditChargeDate').val(result.data.date);\n                    $('#editChargeTypeId').\n                        val(result.data.charge_type_id).\n                        trigger('change', [{ onceOnEditRender: true }]);\n                    $('.price-input').trigger('input');\n                    $('#appliedChargeId').text(editAppliedCharge);\n                    $('#editIpdChargesModal').modal('show');\n                    ajaxCallCompleted();\n                }\n            },\n            error: function (result) {\n                manageAjaxErrors(result);\n            },\n        });\n    };\n\n    $(document).on('submit', '#editIpdChargesForm', function (event) {\n        event.preventDefault();\n        let loadingButton = jQuery(this).find('#btnEditCharges');\n        loadingButton.button('loading');\n        let id = $('#ipdChargesId').val();\n        let url = ipdChargesUrl + '/' + id;\n        let data = {\n            'formSelector': $(this),\n            'url': url,\n            'type': 'POST',\n            'tableSelector': tableName,\n        };\n        editRecord(data, loadingButton, '#editIpdChargesModal',\n            '#btnEditCharges');\n        location.reload();\n    });\n\n    $('#addIpdChargesModal').on('hidden.bs.modal', function () {\n        $('#addIpdChargeNewForm')[0].reset();\n        $('#chargeTypeId, #chargeCategoryId, #chargeId, #ipdStandardCharge, #ipdAppliedCharge').\n            val('');\n        $('#chargeCategoryId, #chargeId').empty();\n        $('#chargeTypeId').trigger('change.select2');\n        $('#btnIpdChargeSave').prop('disabled', true);\n    });\n    $('#editIpdChargesModal').on('hidden.bs.modal', function () {\n        $('#btnEditCharges').prop('disabled', true);\n    });\n});\n\nfunction deleteItemAjax (url, tableId, header, callFunction = null) {\n    $.ajax({\n        url: url,\n        type: 'DELETE',\n        dataType: 'json',\n        success: function (obj) {\n            if (obj.success) {\n                location.reload();\n            }\n            swal({\n                title: 'Deleted!',\n                text: header + ' has been deleted.',\n                type: 'success',\n                timer: 2000,\n            });\n            if (callFunction) {\n                eval(callFunction);\n            }\n        },\n        error: function (data) {\n            swal({\n                title: '',\n                text: data.responseJSON.message,\n                type: 'error',\n                timer: 5000,\n            });\n        },\n    });\n}\n\nwindow.makeChargesBtnDisabled = function (isChargeOnEdit) {\n    $((!isChargeOnEdit) ? '#btnIpdChargeSave' : '#btnEditCharges').\n        prop('disabled', true);\n};\n"],"sourceRoot":""}