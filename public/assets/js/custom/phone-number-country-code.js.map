{"version":3,"sources":["webpack:///./resources/assets/js/custom/phone-number-country-code.js"],"names":["input","document","querySelector","errorMsg","validMsg","errorMap","intl","window","intlTelInput","initialCountry","separateDialCode","geoIpLookup","success","failure","$","get","always","resp","countryCode","country","utilsScript","reset","classList","remove","innerHTML","add","addEventListener","value","trim","isValidNumber","errorCode","getValidationError","phoneNo","setTimeout","trigger","on","setNumber","getCode","selectedCountryData","val","isEdit","removeSpacePhoneNumber","replace","ready"],"mappings":"mBAEA,IAAIA,EAAQC,SAASC,cAAc,gBAC/BC,EAAWF,SAASC,cAAc,cAClCE,EAAWH,SAASC,cAAc,cAElCG,EAAW,CACX,iBACA,uBACA,YACA,WACA,kBAGAC,EAAOC,OAAOC,aAAaR,EAAO,CAClCS,eAAgB,OAChBC,kBAAkB,EAClBC,YAAa,SAAUC,EAASC,GAC5BC,EAAEC,IAAI,qBAAqB,cAAgB,SACvCC,QAAO,SAAUC,GACb,IAAIC,EAAeD,GAAQA,EAAKE,QAC1BF,EAAKE,QACL,GACNP,EAAQM,OAGpBE,cAGAC,EAAQ,WACRrB,EAAMsB,UAAUC,OAAO,SACvBpB,EAASqB,UAAY,GACrBrB,EAASmB,UAAUG,IAAI,QACvBrB,EAASkB,UAAUG,IAAI,SAmC3B,GAhCAzB,EAAM0B,iBAAiB,QAAQ,WAE3B,GADAL,IACIrB,EAAM2B,MAAMC,OACZ,GAAItB,EAAKuB,gBACLzB,EAASkB,UAAUC,OAAO,YACvB,CACHvB,EAAMsB,UAAUG,IAAI,SACpB,IAAIK,EAAYxB,EAAKyB,qBACrB5B,EAASqB,UAAYnB,EAASyB,GAC9B3B,EAASmB,UAAUC,OAAO,YAMtCvB,EAAM0B,iBAAiB,SAAUL,GACjCrB,EAAM0B,iBAAiB,QAASL,GAEV,oBAAXW,SAAsC,KAAZA,SACjCC,YAAW,WACPnB,EAAE,gBAAgBoB,QAAQ,YAC3B,KAEPpB,EAAE,gBAAgBqB,GAAG,mCAAmC,WAC9B,oBAAXH,SAAsC,KAAZA,UACjC1B,EAAK8B,UAAU,IAAMJ,SACrBA,QAAU,IAEd,IAAIK,EAAU/B,EAAKgC,oBAAL,SACdxB,EAAE,gBAAgByB,IAAIF,MAGtBG,OAAQ,CACR,IAAIH,EAAU/B,EAAKgC,oBAAL,SACdxB,EAAE,gBAAgByB,IAAIF,GAG1B,IACII,EADiB3B,EAAE,gBAAgByB,MACKG,QAAQ,MAAO,IAC3D5B,EAAE,gBAAgByB,IAAIE,GAEtB3B,EAAEb,UAAU0C,OAAM,WACd,IACIF,EADiB3B,EAAE,gBAAgByB,MACKG,QAAQ,MAAO,IAC3D5B,EAAE,gBAAgByB,IAAIE,O","file":"/assets/js/custom/phone-number-country-code.js","sourcesContent":["'use strict';\n\nlet input = document.querySelector('#phoneNumber'),\n    errorMsg = document.querySelector('#error-msg'),\n    validMsg = document.querySelector('#valid-msg');\n\nlet errorMap = [\n    'Invalid number',\n    'Invalid country code',\n    'Too short',\n    'Too long',\n    'Invalid number'];\n\n// initialise plugin\nlet intl = window.intlTelInput(input, {\n    initialCountry: 'auto',\n    separateDialCode: true,\n    geoIpLookup: function (success, failure) {\n        $.get('https://ipinfo.io', function () {}, 'jsonp').\n            always(function (resp) {\n                var countryCode = (resp && resp.country)\n                    ? resp.country\n                    : '';\n                success(countryCode);\n            });\n    },\n    utilsScript: utilsScript,\n});\n\nlet reset = function () {\n    input.classList.remove('error');\n    errorMsg.innerHTML = '';\n    errorMsg.classList.add('hide');\n    validMsg.classList.add('hide');\n};\n\ninput.addEventListener('blur', function () {\n    reset();\n    if (input.value.trim()) {\n        if (intl.isValidNumber()) {\n            validMsg.classList.remove('hide');\n        } else {\n            input.classList.add('error');\n            var errorCode = intl.getValidationError();\n            errorMsg.innerHTML = errorMap[errorCode];\n            errorMsg.classList.remove('hide');\n        }\n    }\n});\n\n// on keyup / change flag: reset\ninput.addEventListener('change', reset);\ninput.addEventListener('keyup', reset);\n\nif (typeof phoneNo != 'undefined' && phoneNo !== '') {\n    setTimeout(function () {\n        $('#phoneNumber').trigger('change');\n    }, 500);\n}\n$('#phoneNumber').on('blur keyup change countrychange', function () {\n    if (typeof phoneNo != 'undefined' && phoneNo !== '') {\n        intl.setNumber('+' + phoneNo);\n        phoneNo = '';\n    }\n    let getCode = intl.selectedCountryData['dialCode'];\n    $('#prefix_code').val(getCode);\n});\n\nif (isEdit) {\n    let getCode = intl.selectedCountryData['dialCode'];\n    $('#prefix_code').val(getCode);\n}\n\nlet getPhoneNumber = $('#phoneNumber').val();\nlet removeSpacePhoneNumber = getPhoneNumber.replace(/\\s/g, '');\n$('#phoneNumber').val(removeSpacePhoneNumber);\n\n$(document).ready(function () {\n    let getPhoneNumber = $('#phoneNumber').val();\n    let removeSpacePhoneNumber = getPhoneNumber.replace(/\\s/g, '');\n    $('#phoneNumber').val(removeSpacePhoneNumber);\n});\n\n"],"sourceRoot":""}