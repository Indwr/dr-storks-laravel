{"version":3,"sources":["webpack:///./resources/assets/js/employee_payrolls/payrolls.js"],"names":["$","document","ready","select2","width","trigger","focus","on","basicSalary","parseFloat","removeCommas","val","allowance","deductions","netSalary","toFixed","removeClass","text","show","setTimeout","addClass","isNaN","this","ajax","url","employeeUrl","type","dataType","data","id","success","empty","removeAttr","each","i","v","append","attr","isEdit","employeeOwnerId","prop"],"mappings":"AAAAA,EAAEC,UAAUC,OAAM,WACd,aAEAF,EAAE,mCAAmCG,QAAQ,CACzCC,MAAO,SAGXJ,EAAE,gBAAgBK,QAAQ,SAE1BL,EAAE,SAASM,WAGfN,EAAE,uCAAuCO,GAAG,UAAU,WAClD,IAAIC,EAAcC,WAAWC,aAAaV,EAAE,gBAAgBW,QACxDC,EAAYH,WAAWC,aAAaV,EAAE,cAAcW,QACpDE,EAAaJ,WAAWC,aAAaV,EAAE,eAAeW,QACtDG,GAAcN,EAAcI,GAAYG,QAAQ,GAEhDF,EAAaC,IACbd,EAAE,wBAAwBgB,YAAY,UACtChB,EAAE,wBACEiB,KAAK,8DACLC,OACJlB,EAAE,eAAeW,IAAI,MACrBE,EAAa,EACbM,YAAW,WACPnB,EAAE,wBAAwBoB,SAAS,UACnCpB,EAAE,wBAAwBiB,KAAK,MAChC,MAGPH,GAAcN,EAAcI,EAAaC,GAAYE,QAAQ,GAC3DM,MAAMP,GAAgEd,EACpE,cAAcW,IAAI,GADAX,EAAE,cAAcW,IAAIG,GAAWT,QAAQ,YAIjEL,EAAE,SAASO,GAAG,UAAU,WACE,KAAlBP,EAAEsB,MAAMX,OACRX,EAAEuB,KAAK,CACHC,IAAKC,YACLC,KAAM,MACNC,SAAU,OACVC,KAAM,CAAEC,GAAI7B,EAAEsB,MAAMX,OACpBmB,QAAS,SAAUF,GACf5B,EAAE,cAAc+B,QAChB/B,EAAE,cAAcgC,WAAW,YAC3BhC,EAAEiC,KAAKL,EAAKA,MAAM,SAAUM,EAAGC,GAC3BnC,EAAE,cACEoC,OAAOpC,EAAE,qBAAqBqC,KAAK,QAASH,GAAGjB,KAAKkB,OAExDG,SACAtC,EAAE,cAAcW,IAAI4B,iBAAiBlC,QAAQ,UAC7CiC,QAAS,MAKzBtC,EAAE,cAAc+B,QAChB/B,EAAE,cAAcwC,KAAK,YAAY,MAGrCxC,EAAEC,UAAUM,GAAG,SAAU,gCAAgC,WACrDP,EAAE,YAAYqC,KAAK,YAAY","file":"/assets/js/employee_payrolls/payrolls.js","sourcesContent":["$(document).ready(function () {\n    'use strict';\n\n    $('#type,#ownerType,#month,#status').select2({\n        width: '100%',\n    });\n\n    $('.price-input').trigger('input');\n\n    $('#type').focus();\n});\n\n$('#basicSalary,#allowance,#deductions').on('change', function () {\n    let basicSalary = parseFloat(removeCommas($('#basicSalary').val()));\n    let allowance = parseFloat(removeCommas($('#allowance').val()));\n    let deductions = parseFloat(removeCommas($('#deductions').val()));\n    let netSalary = ((basicSalary + allowance)).toFixed(2);\n\n    if (deductions > netSalary) {\n        $('#validationErrorsBox').removeClass('d-none');\n        $('#validationErrorsBox').\n            text('Deductions cannot be greater than Basic salary + Allowance').\n            show();\n        $('#deductions').val(null);\n        deductions = 0;\n        setTimeout(function () {\n            $('#validationErrorsBox').addClass('d-none');\n            $('#validationErrorsBox').text('');\n        }, 7000);\n    }\n\n    netSalary = ((basicSalary + allowance) - deductions).toFixed(2);\n    (!isNaN(netSalary)) ? $('#netSalary').val(netSalary).trigger('input') : $(\n        '#netSalary').val(0);\n});\n\n$('#type').on('change', function () {\n    if ($(this).val() !== '') {\n        $.ajax({\n            url: employeeUrl,\n            type: 'get',\n            dataType: 'json',\n            data: { id: $(this).val() },\n            success: function (data) {\n                $('#ownerType').empty();\n                $('#ownerType').removeAttr('disabled');\n                $.each(data.data, function (i, v) {\n                    $('#ownerType').\n                        append($('<option></option>').attr('value', i).text(v));\n                });\n                if (isEdit) {\n                    $('#ownerType').val(employeeOwnerId).trigger('change');\n                    isEdit = false;\n                }\n            },\n        });\n    }\n    $('#ownerType').empty();\n    $('#ownerType').prop('disabled', true);\n});\n\n$(document).on('submit', '#createPayroll, #editPayroll', function () {\n    $('#btnSave').attr('disabled', true);\n});\n"],"sourceRoot":""}