{"version":3,"sources":["webpack:///./resources/assets/js/appointment_calendar/appointment_calendar.js"],"names":["$","document","ready","selectedTime","doctorId","select2","width","screenLock","ajax","url","type","dataType","success","obj","screenUnLock","fullCalendar","themeSystem","height","header","left","center","right","buttonText","today","todayText","month","monthText","week","weekText","day","dayText","defaultDate","Date","defaultView","editable","selectable","eventLimit","views","selectConstraint","start","moment","subtract","end","startOf","add","selectHelper","select","startDate","format","val","userRole","modal","eventAfterRender","event","element","tooltip","title","container","events","data","timeFormat","eventAfterAllRender","view","setTimeout","removeClass","prop","eventClick","showAppointmentDetails","id","window","appointmentId","beforeSend","text","patient","department","doctor","opdDate","status","addNewlines","problem","complete","str","chr","result","length","substring","parseIn","date_time","d","setHours","setMinutes","getTimeIntervals","time1","time2","duration","arr","push","toTimeString","getMinutes","on","currentTarget","this","parent","hasClass","css","addClass","show","html","preventDefault","formData","serialize","calenderAppointmentSaveUrl","displaySuccessMessage","message","location","href","calenderIndexPage","error","printErrorMessage","intervals","alreadyCreateTimeSlot","doctorChange","remove","delay","fadeOut","clear","selected","selectedDate","dayName","getTime","getTimezoneOffset","getDay","doctorScheduleList","day_name","doctor_id","scheduleDay","doctorStartTime","available_from","doctorEndTime","available_to","a","perPatientTime","per_patient_time","split","minutes","startTime","endTime","index","timeStlots","prepareTemplateRender","append","available_on","isCreate","editSelectedDate","getBookingSlot","bookingSlotArr","hasOwnProperty","editTimeSlot","onlyTime","toString","each","value","i","v","children","click","resetModalForm"],"mappings":"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","file":"/assets/js/appointment_calendar/appointment_calendar.js","sourcesContent":["$(document).ready(function () {\n    'use strict';\n\n    $('#patientIdAppointment, #doctorIdAppointment').select2({\n        width: '100%',\n    });\n\n    screenLock();\n    $.ajax({\n        url: 'calendar-list',\n        type: 'GET',\n        dataType: 'json',\n        success: function (obj) {\n            screenUnLock();\n            $('#calendar').fullCalendar({\n                themeSystem: 'bootstrap4',\n                height: 750,\n                header: {\n                    left: 'prev,next today',\n                    center: 'title',\n                    right: 'month,agendaWeek,agendaDay',\n                },\n                buttonText: {\n                    today: todayText,\n                    month: monthText,\n                    week: weekText,\n                    day: dayText,\n                },\n                defaultDate: new Date(),\n                defaultView: 'month',\n                editable: false,\n                selectable: true,\n                eventLimit: true,\n                views: {\n                    month: {\n                        eventLimit: 5,\n                    },\n                },\n                selectConstraint: {\n                    start: $.fullCalendar.moment().subtract(1, 'days'),\n                    end: $.fullCalendar.moment().startOf('year').add(1, 'year'),\n                },\n                selectHelper: true,\n                select: function (start) {\n                    let startDate = start.format('YYYY-MM-DD');\n                    $('#opdDateAppointment').val(startDate);\n                    if (userRole != 1) {\n                        $('#addAppointmentModal').modal('show');\n                    }\n                },\n                eventAfterRender: function (event, element) {\n                    $(element).tooltip({\n                        title: event.title,\n                        container: 'body',\n                    });\n                },\n                events: obj.data,\n                timeFormat: 'h:mm A',\n                eventAfterAllRender: function (view) { /* used this vs viewRender */\n                    setTimeout(function () {\n                        $('#calendar button.fc-today-button').\n                            removeClass('disabled').\n                            prop('disabled', false);\n                    }, 100);\n                },\n                eventClick: function (event) {\n                    showAppointmentDetails(event.id);\n                },\n            });\n        },\n    });\n\n    window.showAppointmentDetails = function (appointmentId) {\n        $.ajax({\n            url: 'appointment-detail' + '/' + appointmentId,\n            type: 'GET',\n            beforeSend: function () {\n                screenLock();\n            },\n            success: function (data) {\n                $('#patientName').text(data.data.patient);\n                $('#departmentName').text(data.data.department);\n                $('#doctorName').text(data.data.doctor);\n                $('#opdDate').text(data.data.opdDate);\n                $('#status').text(data.data.status);\n                $('#problem').text(addNewlines(data.data.problem, 30));\n                $('.tooltip ').tooltip('hide');\n                $('#appointmentDetailModal').modal('show');\n            },\n            complete: function () {\n                screenUnLock();\n            },\n        });\n    };\n\n    window.addNewlines = function (str, chr) {\n        let result = '';\n        if (str != null) {\n            while (str.length > 0) {\n                result += str.substring(0, chr) + '\\n';\n                str = str.substring(chr);\n            }\n\n            return result;\n        } else\n            return 'N/A';\n    };\n\n    //parseIn date_time\n    window.parseIn = function (date_time) {\n        let d = new Date();\n        d.setHours(date_time.substring(11, 13));\n        d.setMinutes(date_time.substring(14, 16));\n\n        return d;\n    };\n\n    //make time slot list\n    window.getTimeIntervals = function (time1, time2, duration) {\n        let arr = [];\n        while (time1 < time2) {\n            arr.push(time1.toTimeString().substring(0, 5));\n            time1.setMinutes(time1.getMinutes() + duration);\n        }\n        return arr;\n    };\n\n    //slot click change color\n    let selectedTime;\n    $(document).on('click', '.time-interval', function (event) {\n        let appointmentId = $(event.currentTarget).data('id');\n        if ($(this).data('id') == appointmentId) {\n            if ($(this).parent().hasClass('booked')) {\n                $('.time-slot-book').css('background-color', '#ffa0a0');\n            }\n        }\n        selectedTime = ($(this).text());\n        $('.time-slot').removeClass('time-slot-book');\n        $(this).parent().addClass('time-slot-book');\n    });\n\n    //create appointment\n    $('#calenderAppointmentForm').on('submit', function (event) {\n        if (selectedTime == null || selectedTime == '') {\n            $('#validationErrorsBox').\n                show().\n                html('Please select appointment time slot');\n            return false;\n        }\n        event.preventDefault();\n        screenLock();\n        let formData = $(this).serialize() + '&time=' + selectedTime;\n        $.ajax({\n            url: calenderAppointmentSaveUrl,\n            type: 'POST',\n            dataType: 'json',\n            data: formData,\n            success: function (result) {\n                displaySuccessMessage(result.message);\n                window.location.href = calenderIndexPage;\n            },\n            error: function (result) {\n                printErrorMessage('#validationErrorsBox', result);\n                screenUnLock();\n            },\n        });\n    });\n\n    let doctorId;\n    let doctorChange = false;\n    let selectedDate;\n    let intervals;\n    let alreadyCreateTimeSlot;\n    $('#doctorIdAppointment').on('change', function () {\n        if (doctorChange) {\n            $('.error-message').css('display', 'none');\n            doctorChange = true;\n        }\n        $('.error-message').css('display', 'none');\n        doctorId = $(this).val();\n        doctorChange = true;\n        if ($('#opdDateAppointment').val() !== '') {\n            $('.doctor-schedule').css('display', 'none');\n            $('.error-message').css('display', 'none');\n            $('.available-slot-heading').css('display', 'none');\n            $('.color-information').css('display', 'none');\n            $('.time-slot').remove();\n\n            if ($('#doctorIdAppintment').val() == '') {\n                $('#validationErrorsBox').\n                    show().\n                    html('Please select Doctor');\n                $('#validationErrorsBox').delay(5000).fadeOut();\n                $('#opdDateAppointment').val('');\n                $('#opdDateAppointment').data('DateTimePicker').clear();\n                return false;\n            }\n            let weekday = [\n                'Sunday',\n                'Monday',\n                'Tuesday',\n                'Wednesday',\n                'Thursday',\n                'Friday',\n                'Saturday'];\n            const selected = $('#opdDateAppointment').val();\n            const selectedDate = new Date(selected);\n            const date = new Date(selectedDate.getTime() + selectedDate.getTimezoneOffset() * 60000);\n            let dayName = weekday[date.getDay()];\n            //if dayName is blank, then ajax call not run.\n            if (dayName == null || dayName == '') {\n                return false;\n            }\n\n            //get doctor schedule list with time slot.\n            $.ajax({\n                type: 'GET',\n                url: doctorScheduleList,\n                data: {\n                    day_name: dayName,\n                    doctor_id: doctorId,\n                },\n                success: function (result) {\n                    if (result.success) {\n                        if (result.data != '') {\n                            if (result.data.scheduleDay.length != 0) {\n                                let doctorStartTime = selected + ' ' +\n                                    result.data.scheduleDay[0].available_from;\n                                let doctorEndTime = selected + ' ' +\n                                    result.data.scheduleDay[0].available_to;\n                                let doctorPatientTime = result.data.perPatientTime[0].per_patient_time;\n\n                                //perPatientTime convert to Minuter\n                                let a = doctorPatientTime.split(':'); // split it at the colons\n                                let minutes = (+a[0]) * 60 + (+a[1]); // convert to minute\n\n                                //parse In\n                                let startTime = parseIn(doctorStartTime);\n                                let endTime = parseIn(doctorEndTime);\n\n                                //call to getTimeIntervals function\n                                intervals = getTimeIntervals(startTime, endTime,\n                                    minutes);\n\n                                //if intervals array length is grater then 0 then process\n                                if (intervals.length > 0) {\n                                    $('.available-slot-heading').\n                                        css('display', 'block');\n                                    $('.color-information').\n                                        css('display', 'block');\n                                    let index;\n                                    let timeStlots = '';\n                                    for (index = 0; index <\n                                    intervals.length; ++index) {\n                                        let data = [\n                                            {\n                                                'index': index,\n                                                'timeSlot': intervals[index],\n                                            }];\n                                        let timeSlot = prepareTemplateRender(\n                                            '#appointmentSlotTemplate', data);\n                                        timeStlots += timeSlot;\n                                    }\n                                    $('.available-slot').append(timeStlots);\n                                }\n\n                                // display Day Name and time\n                                if ((result.data.scheduleDay[0].available_from !=\n                                    '00:00:00' &&\n                                    result.data.scheduleDay[0].available_to !=\n                                    '00:00:00') &&\n                                    (doctorStartTime != doctorEndTime)) {\n                                    $('.doctor-schedule').\n                                        css('display', 'block');\n                                    $('.color-information').\n                                        css('display', 'block');\n                                    $('.day-name').\n                                        html(\n                                            result.data.scheduleDay[0].available_on);\n                                    $('.schedule-time').\n                                        html('[' +\n                                            result.data.scheduleDay[0].available_from +\n                                            ' - ' +\n                                            result.data.scheduleDay[0].available_to +\n                                            ']');\n                                } else {\n                                    $('.doctor-schedule').\n                                        css('display', 'none');\n                                    $('.color-information').\n                                        css('display', 'none');\n                                    $('.error-message').css('display', 'block');\n                                    $('.error-message').\n                                        html(\n                                            'Doctor Schedule not available this date.');\n                                }\n                            } else {\n                                $('.doctor-schedule').css('display', 'none');\n                                $('.color-information').css('display', 'none');\n                                $('.error-message').css('display', 'block');\n                                $('.error-message').\n                                    html(\n                                        'Doctor Schedule not available this date.');\n                            }\n                        }\n                    }\n                },\n            });\n\n            if (isCreate) {\n                let delayCall = 200;\n                setTimeout(getCreateTimeSlot, delayCall);\n\n                function getCreateTimeSlot () {\n                    let data = null;\n                    if (isCreate) {\n                        data = {\n                            editSelectedDate: selected,\n                            doctor_id: doctorId,\n                        };\n                    }\n                    $.ajax({\n                        url: getBookingSlot,\n                        type: 'GET',\n                        data: data,\n                        success: function (result) {\n                            alreadyCreateTimeSlot = result.data.bookingSlotArr;\n                            if (result.data.hasOwnProperty('onlyTime')) {\n                                if (result.data.bookingSlotArr.length > 0) {\n                                    editTimeSlot = result.data.onlyTime.toString();\n                                    $.each(result.data.bookingSlotArr,\n                                        function (index, value) {\n                                            $.each(intervals, function (i, v) {\n                                                if (value == v) {\n                                                    $('.time-interval').\n                                                        each(function () {\n                                                            if ($(this).\n                                                                    data('id') ==\n                                                                i) {\n                                                                if ($(this).\n                                                                        html() !=\n                                                                    editTimeSlot) {\n                                                                    $(this).\n                                                                        parent().\n                                                                        css(\n                                                                            {\n                                                                                'background-color': '#ffa721',\n                                                                                'border': '1px solid #ffa721',\n                                                                                'color': '#ffffff',\n                                                                            });\n                                                                    $(this).\n                                                                        parent().\n                                                                        addClass(\n                                                                            'booked');\n                                                                    $(this).\n                                                                        parent().\n                                                                        children().\n                                                                        prop(\n                                                                            'disabled',\n                                                                            true);\n                                                                }\n                                                            }\n                                                        });\n                                                }\n                                            });\n                                        });\n                                }\n                                $('.time-interval').each(function () {\n                                    if ($(this).html() == editTimeSlot &&\n                                        result.data.bookingSlotArr.length > 0) {\n                                        $(this).\n                                            parent().\n                                            addClass('time-slot-book');\n                                        $(this).parent().removeClass('booked');\n                                        $(this).\n                                            parent().\n                                            children().\n                                            prop('disabled', false);\n                                        $(this).click();\n                                    }\n                                });\n                            } else if (alreadyCreateTimeSlot.length > 0) {\n                                $.each(alreadyCreateTimeSlot,\n                                    function (index, value) {\n                                        $.each(intervals, function (i, v) {\n                                            if (value == v) {\n                                                $('.time-interval').\n                                                    each(function () {\n                                                        if ($(this).\n                                                                data('id') ==\n                                                            i) {\n                                                            $(this).\n                                                                parent().\n                                                                addClass(\n                                                                    'time-slot-book');\n                                                            $('.time-slot-book').\n                                                                css(\n                                                                    {\n                                                                        'background-color': '#ffa721',\n                                                                        'border': '1px solid #ffa721',\n                                                                        'color': '#ffffff',\n                                                                    });\n                                                            $(this).\n                                                                parent().\n                                                                addClass(\n                                                                    'booked');\n                                                            $(this).\n                                                                parent().\n                                                                children().\n                                                                prop('disabled',\n                                                                    true);\n                                                        }\n                                                    });\n                                            }\n                                        });\n                                    });\n                            }\n                        },\n                    });\n                }\n            }\n        }\n    });\n\n    // reset the modal data after cancel/close\n    $('#addAppointmentModal').on('hidden.bs.modal', function () {\n        resetModalForm('#calenderAppointmentForm', '#validationErrorsBox');\n        $('.day-name').html('');\n        $('.schedule-time').html('');\n        $('.doctor-schedule').css('display', 'none');\n        $('.error-message').css('display', 'none');\n        $('.available-slot-heading').css('display', 'none');\n        $('.available-slot').html('');\n        $('.color-information').css('display', 'none');\n        selectedTime = null;\n    });\n});\n"],"sourceRoot":""}