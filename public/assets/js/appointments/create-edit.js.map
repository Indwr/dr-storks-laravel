{"version":3,"sources":["webpack:///./resources/assets/js/appointments/create-edit.js"],"names":["$","document","ready","doctorId","select2","width","datetimepicker","DatetimepickerDefaults","format","sideBySide","minDate","moment","subtract","useCurrent","first","focus","on","css","data","clear","ajax","url","doctorDepartmentUrl","type","dataType","id","this","val","success","empty","append","each","i","v","attr","text","selectedDate","intervals","alreadyCreateTimeSlot","selectedTime","editTimeSlot","doctorChange","remove","show","html","delay","fadeOut","dayName","Date","getDay","doctorScheduleList","day_name","doctor_id","result","scheduleDay","length","doctorStartTime","available_from","doctorEndTime","available_to","a","perPatientTime","per_patient_time","split","minutes","startTime","parseIn","endTime","getTimeIntervals","index","timeStlots","prepareTemplateRender","available_on","isCreate","isEdit","setTimeout","editSelectedDate","editId","appointmentEditId","getBookingSlot","bookingSlotArr","hasOwnProperty","onlyTime","toString","value","parent","addClass","children","prop","removeClass","click","trigger","event","window","date_time","d","setHours","substring","setMinutes","time1","time2","duration","arr","push","toTimeString","getMinutes","appointmentId","currentTarget","hasClass","preventDefault","screenLock","formData","serialize","appointmentSaveUrl","displaySuccessMessage","message","location","href","appointmentIndexPage","error","printErrorMessage","screenUnLock"],"mappings":"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","file":"/assets/js/appointments/create-edit.js","sourcesContent":["$(document).ready(function () {\n    'use strict';\n\n    $('#patientId, #doctorId, #departmentId').select2({\n        width: '100%',\n    });\n    $('#opdDate').datetimepicker(DatetimepickerDefaults({\n        format: 'YYYY-MM-DD',\n        sideBySide: true,\n        minDate: moment().subtract(1, 'days'),\n        useCurrent: false,\n    }));\n    $('#patientId').first().focus();\n\n    $('#departmentId').on('change', function () {\n        $('.error-message').css('display', 'none');\n        $('#opdDate').data('DateTimePicker').clear();\n        $.ajax({\n            url: doctorDepartmentUrl,\n            type: 'get',\n            dataType: 'json',\n            data: { id: $(this).val() },\n            success: function (data) {\n                $('#doctorId').empty();\n                $('#doctorId').\n                    append($('<option value=\"\">Select Doctor</option>'));\n                $.each(data.data, function (i, v) {\n                    $('#doctorId').\n                        append($('<option></option>').attr('value', i).text(v));\n                });\n            },\n        });\n    });\n\n    var doctorId;\n    let doctorChange = false;\n    $('#doctorId').on('change', function () {\n        if (doctorChange) {\n            $('.error-message').css('display', 'none');\n            $('#opdDate').data('DateTimePicker').clear();\n            doctorChange = true;\n        }\n        $('.error-message').css('display', 'none');\n        doctorId = $(this).val();\n        doctorChange = true;\n    });\n\n    var selectedDate;\n    var intervals;\n    var alreadyCreateTimeSlot;\n    $('#opdDate').on('dp.change', function () {\n        $('.doctor-schedule').css('display', 'none');\n        $('.error-message').css('display', 'none');\n        $('.available-slot-heading').css('display', 'none');\n        $('.color-information').css('display', 'none');\n        $('.time-slot').remove();\n        if ($('#departmentId').val() == '') {\n            $('#validationErrorsBox').\n                show().\n                html('Please select Doctor Department');\n            $('#validationErrorsBox').delay(5000).fadeOut();\n            $('#opdDate').val('');\n            $('#opdDate').data('DateTimePicker').clear();\n            return false;\n        } else if ($('#doctorId').val() == '') {\n            $('#validationErrorsBox').\n                show().\n                html('Please select Doctor');\n            $('#validationErrorsBox').delay(5000).fadeOut();\n            $('#opdDate').val('');\n            $('#opdDate').data('DateTimePicker').clear();\n            return false;\n        }\n        var weekday = [\n            'Sunday',\n            'Monday',\n            'Tuesday',\n            'Wednesday',\n            'Thursday',\n            'Friday',\n            'Saturday'];\n        var selected = new Date($(this).val());\n        let dayName = weekday[selected.getDay()];\n        selectedDate = $(this).val();\n\n        //if dayName is blank, then ajax call not run.\n        if (dayName == null || dayName == '') {\n            return false;\n        }\n\n        //get doctor schedule list with time slot.\n        $.ajax({\n            type: 'GET',\n            url: doctorScheduleList,\n            data: {\n                day_name: dayName,\n                doctor_id: doctorId,\n            },\n            success: function (result) {\n                if (result.success) {\n                    if (result.data != '') {\n                        if (result.data.scheduleDay.length != 0) {\n                            var doctorStartTime = selectedDate + ' ' +\n                                result.data.scheduleDay[0].available_from;\n                            var doctorEndTime = selectedDate + ' ' +\n                                result.data.scheduleDay[0].available_to;\n                            var doctorPatientTime = result.data.perPatientTime[0].per_patient_time;\n\n                            //perPatientTime convert to Minute\n                            var a = doctorPatientTime.split(':'); // split it at the colons\n                            var minutes = (+a[0]) * 60 + (+a[1]); // convert to minute\n\n                            //parse In\n                            var startTime = parseIn(doctorStartTime);\n                            var endTime = parseIn(doctorEndTime);\n\n                            //call to getTimeIntervals function\n                            intervals = getTimeIntervals(startTime, endTime,\n                                minutes);\n\n                            //if intervals array length is grater then 0 then process\n                            if (intervals.length > 0) {\n                                $('.available-slot-heading').\n                                    css('display', 'block');\n                                $('.color-information').css('display', 'block');\n                                var index;\n                                let timeStlots = '';\n                                for (index = 0; index <\n                                intervals.length; ++index) {\n                                    let data = [\n                                        {\n                                            'index': index,\n                                            'timeSlot': intervals[index],\n                                        }];\n                                    var timeSlot = prepareTemplateRender(\n                                        '#appointmentSlotTemplate', data);\n                                    timeStlots += timeSlot;\n                                }\n                                $('.available-slot').append(timeStlots);\n                            }\n\n                            // display Day Name and time\n                            if ((result.data.scheduleDay[0].available_from !=\n                                '00:00:00' &&\n                                result.data.scheduleDay[0].available_to !=\n                                '00:00:00') &&\n                                (doctorStartTime != doctorEndTime)) {\n                                $('.doctor-schedule').css('display', 'block');\n                                $('.color-information').css('display', 'block');\n                                $('.day-name').\n                                    html(\n                                        result.data.scheduleDay[0].available_on);\n                                $('.schedule-time').\n                                    html('[' +\n                                        result.data.scheduleDay[0].available_from +\n                                        ' - ' +\n                                        result.data.scheduleDay[0].available_to +\n                                        ']');\n                            } else {\n                                $('.doctor-schedule').css('display', 'none');\n                                $('.color-information').css('display', 'none');\n                                $('.error-message').css('display', 'block');\n                                $('.error-message').\n                                    html(\n                                        'Doctor Schedule not available this date.');\n                            }\n                        } else {\n                            $('.doctor-schedule').css('display', 'none');\n                            $('.color-information').css('display', 'none');\n                            $('.error-message').css('display', 'block');\n                            $('.error-message').\n                                html(\n                                    'Doctor Schedule not available this date.');\n                        }\n                    }\n                }\n            },\n        });\n\n        if (isCreate || isEdit) {\n            var delayCall = 200;\n            setTimeout(getCreateTimeSlot, delayCall);\n\n            function getCreateTimeSlot () {\n                if (isCreate) {\n                    var data = {\n                        editSelectedDate: selectedDate,\n                        doctor_id: doctorId,\n                    };\n                } else {\n                    var data = {\n                        editSelectedDate: selectedDate,\n                        editId: appointmentEditId,\n                        doctor_id: doctorId,\n                    };\n                }\n\n                $.ajax({\n                    url: getBookingSlot,\n                    type: 'GET',\n                    data: data,\n                    success: function (result) {\n                        alreadyCreateTimeSlot = result.data.bookingSlotArr;\n                        if (result.data.hasOwnProperty('onlyTime')) {\n                            if (result.data.bookingSlotArr.length > 0) {\n                                editTimeSlot = result.data.onlyTime.toString();\n                                $.each(result.data.bookingSlotArr,\n                                    function (index, value) {\n                                        $.each(intervals, function (i, v) {\n                                            if (value == v) {\n                                                $('.time-interval').\n                                                    each(function () {\n                                                        if ($(this).\n                                                            data('id') == i) {\n                                                            if ($(this).\n                                                                    html() !=\n                                                                editTimeSlot) {\n                                                                $(this).\n                                                                    parent().\n                                                                    css(\n                                                                        {\n                                                                            'background-color': '#ffa721',\n                                                                            'border': '1px solid #ffa721',\n                                                                            'color': '#ffffff',\n                                                                        });\n                                                                $(this).\n                                                                    parent().\n                                                                    addClass(\n                                                                        'booked');\n                                                                $(this).\n                                                                    parent().\n                                                                    children().\n                                                                    prop(\n                                                                        'disabled',\n                                                                        true);\n                                                            }\n                                                        }\n                                                    });\n                                            }\n                                        });\n                                    });\n                            }\n                            $('.time-interval').each(function () {\n                                if ($(this).html() == editTimeSlot &&\n                                    result.data.bookingSlotArr.length > 0) {\n                                    $(this).parent().addClass('time-slot-book');\n                                    $(this).parent().removeClass('booked');\n                                    $(this).\n                                        parent().\n                                        children().\n                                        prop('disabled', false);\n                                    $(this).click();\n                                }\n                            });\n                        } else if (alreadyCreateTimeSlot.length > 0) {\n                            $.each(alreadyCreateTimeSlot,\n                                function (index, value) {\n                                    $.each(intervals, function (i, v) {\n                                        if (value == v) {\n                                            $('.time-interval').\n                                                each(function () {\n                                                    if ($(this).data('id') ==\n                                                        i) {\n                                                        $(this).\n                                                            parent().\n                                                            addClass(\n                                                                'time-slot-book');\n                                                        $('.time-slot-book').\n                                                            css(\n                                                                {\n                                                                    'background-color': '#ffa721',\n                                                                    'border': '1px solid #ffa721',\n                                                                    'color': '#ffffff',\n                                                                });\n                                                        $(this).\n                                                            parent().\n                                                            addClass('booked');\n                                                        $(this).\n                                                            parent().\n                                                            children().\n                                                            prop('disabled',\n                                                                true);\n                                                    }\n                                                });\n                                        }\n                                    });\n                                });\n                        }\n                    },\n                });\n            }\n        }\n    });\n\n    // if edit record then trigger change\n    var editTimeSlot;\n    if (isEdit) {\n        $('#doctorId').trigger('change', function (event) {\n            doctorId = $(this).val();\n        });\n\n        $('#opdDate').trigger('dp.change', function () {\n            var selected = new Date($(this).val());\n        });\n    }\n\n    //parseIn date_time\n    window.parseIn = function (date_time) {\n        var d = new Date();\n        d.setHours(date_time.substring(11, 13));\n        d.setMinutes(date_time.substring(14, 16));\n\n        return d;\n    };\n\n    //make time slot list\n    window.getTimeIntervals = function (time1, time2, duration) {\n        var arr = [];\n        while (time1 < time2) {\n            arr.push(time1.toTimeString().substring(0, 5));\n            time1.setMinutes(time1.getMinutes() + duration);\n        }\n        return arr;\n    };\n\n    //slot click change color\n    var selectedTime;\n    $(document).on('click', '.time-interval', function (event) {\n        let appointmentId = $(event.currentTarget).data('id');\n        if ($(this).data('id') == appointmentId) {\n            if ($(this).parent().hasClass('booked')) {\n                $('.time-slot-book').css('background-color', '#ffa0a0');\n            }\n        }\n        selectedTime = ($(this).text());\n        $('.time-slot').removeClass('time-slot-book');\n        $(this).parent().addClass('time-slot-book');\n    });\n\n    //create appointment\n    $('#appointmentForm').on('submit', function (event) {\n        if (selectedTime == null || selectedTime == '') {\n            $('#validationErrorsBox').\n                show().\n                html('Please select appointment time slot');\n            return false;\n        }\n        event.preventDefault();\n        screenLock();\n        let formData = $(this).serialize() + '&time=' + selectedTime;\n        $.ajax({\n            url: appointmentSaveUrl,\n            type: 'POST',\n            dataType: 'json',\n            data: formData,\n            success: function (result) {\n                displaySuccessMessage(result.message);\n                window.location.href = appointmentIndexPage;\n            },\n            error: function (result) {\n                printErrorMessage('#validationErrorsBox', result);\n                screenUnLock();\n            },\n        });\n    });\n\n    var editTimeSlot;\n    $(document).on('click', '.time-interval', function () {\n        editTimeSlot = ($(this).text());\n    });\n\n    //Edit appointment\n    $('#editAppointmentForm').on('submit', function (event) {\n        event.preventDefault();\n        screenLock();\n        let formData = $(this).serialize() + '&time=' + editTimeSlot;\n        $.ajax({\n            url: appointmentSaveUrl,\n            type: 'POST',\n            dataType: 'json',\n            data: formData,\n            success: function (result) {\n                displaySuccessMessage(result.message);\n                window.location.href = appointmentIndexPage;\n            },\n            error: function (result) {\n                printErrorMessage('#validationErrorsBox', result);\n                screenUnLock();\n            },\n        });\n    });\n});\n"],"sourceRoot":""}