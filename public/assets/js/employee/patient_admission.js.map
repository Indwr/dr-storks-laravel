{"version":3,"sources":["webpack:///./resources/assets/js/employee/patient_admission.js"],"names":["patientAdmissionsTable","$","DataTable","processing","serverSide","ajax","url","patientAdmissionsUrl","data","status","find","val","columnDefs","targets","defaultContent","columns","row","id","patient_admission_id","name","patientUrl","patient","user","full_name","doctor","render","admission_date","moment","format","discharge_date","isEmpty","package_id","packageUrl","insurance_id","insuranceUrl","insurance","policy_no","change","reload"],"mappings":"mBACA,IAAIA,EAAyB,wBACnBC,EAAED,GAAwBE,UAAU,CAC1CC,YAAY,EACZC,YAAY,EACZ,MAAS,CAAC,CAAC,EAAG,SACdC,KAAM,CACFC,IAAKC,qBACLC,KAAM,SAAUA,GACZA,EAAKC,OAASR,EAAE,kBACZS,KAAK,mBACLC,QAGZC,WAAY,CACR,CACI,QAAW,CAAC,GACZ,MAAS,MACT,UAAa,eAEjB,CACI,QAAW,CAAC,GACZ,MAAS,KACT,WAAa,EACb,UAAa,eAEjB,CACIC,QAAS,OACTC,eAAgB,QAGxBC,QAAS,CACL,CACIP,KAAM,SAAUQ,GAEZ,MAAO,aADQT,qBAAuB,IAAMS,EAAIC,IAChB,KAC5BD,EAAIE,qBAAuB,QAEnCC,KAAM,wBAEV,CACIX,KAAM,SAAUQ,GAEZ,MAAO,aADQI,WAAa,IAAMJ,EAAIK,QAAQJ,IACd,KAC5BD,EAAIK,QAAQC,KAAKC,UAAY,QAErCJ,KAAM,2BAEV,CACIX,KAAM,SAAUQ,GACZ,OAAOA,EAAIQ,OAAOF,KAAKC,WAE3BJ,KAAM,0BAGV,CACIX,KAAM,SAAUQ,GACZ,OAAOA,GAEXS,OAAQ,SAAUT,GACd,OAA2B,OAAvBA,EAAIU,eACG,MAGJC,OAAOX,EAAIU,gBACdE,OAAO,qBAEfT,KAAM,kBAEV,CACIX,KAAM,SAAUQ,GACZ,OAAOA,GAEXS,OAAQ,SAAUT,GACd,OAA2B,OAAvBA,EAAIa,eACG,MAGJF,OAAOX,EAAIa,gBACdD,OAAO,qBAEfT,KAAM,kBAEV,CACIX,KAAM,SAAUQ,GACZ,OAAIc,QAAQd,EAAIe,YACL,MAGJ,aADQC,WAAa,IAAMhB,EAAG,QAASC,IACd,KAAOD,EAAG,QAASG,KAC/C,QAERA,KAAM,gBAEV,CACIX,KAAM,SAAUQ,GACZ,OAAIc,QAAQd,EAAIiB,cACL,MAGJ,aADQC,aAAe,IAAMlB,EAAImB,UAAUlB,IAClB,KAAOD,EAAImB,UAAUhB,KACjD,QAERA,KAAM,kBAEV,CACIX,KAAM,SAAUQ,GACZ,OAAOc,QAAQd,EAAIoB,WAAa,MAAQpB,EAAIoB,WAEhDjB,KAAM,aAEV,CACIX,KAAM,SAAUQ,GACZ,OAAqB,GAAdA,EAAIP,OAAc,WAAa,UAE1CU,KAAM,WAGd,eAAkB,WACdlB,EAAE,kBAAkBoC,QAAO,WACvBpC,EAAED,GAAwBE,YAAYG,KAAKiC,OAAO,MAAM,U","file":"/assets/js/employee/patient_admission.js","sourcesContent":["'use strict';\nlet patientAdmissionsTable = '#patientAdmissionsTbl';\nlet tbl = $(patientAdmissionsTable).DataTable({\n    processing: true,\n    serverSide: true,\n    'order': [[2, 'desc']],\n    ajax: {\n        url: patientAdmissionsUrl,\n        data: function (data) {\n            data.status = $('#filter_status').\n                find('option:selected').\n                val();\n        },\n    },\n    columnDefs: [\n        {\n            'targets': [0],\n            'width': '10%',\n            'className': 'text-center',\n        },\n        {\n            'targets': [8],\n            'width': '5%',\n            'orderable': false,\n            'className': 'text-center',\n        },\n        {\n            targets: '_all',\n            defaultContent: 'N/A',\n        },\n    ],\n    columns: [\n        {\n            data: function (row) {\n                let showLink = patientAdmissionsUrl + '/' + row.id;\n                return '<a href=\"' + showLink + '\">' +\n                    row.patient_admission_id + '</a>';\n            },\n            name: 'patient_admission_id',\n        },\n        {\n            data: function (row) {\n                let showLink = patientUrl + '/' + row.patient.id;\n                return '<a href=\"' + showLink + '\">' +\n                    row.patient.user.full_name + '</a>';\n            },\n            name: 'patient.user.first_name',\n        },\n        {\n            data: function (row) {\n                return row.doctor.user.full_name;\n            },\n            name: 'doctor.user.first_name',\n        },\n\n        {\n            data: function (row) {\n                return row;\n            },\n            render: function (row) {\n                if (row.admission_date === null) {\n                    return 'N/A';\n                }\n\n                return moment(row.admission_date).\n                    format('Do MMM, Y h:mm A');\n            },\n            name: 'admission_date',\n        },\n        {\n            data: function (row) {\n                return row;\n            },\n            render: function (row) {\n                if (row.discharge_date === null) {\n                    return 'N/A';\n                }\n\n                return moment(row.discharge_date).\n                    format('Do MMM, Y h:mm A');\n            },\n            name: 'discharge_date',\n        },\n        {\n            data: function (row) {\n                if (isEmpty(row.package_id)) {\n                    return 'N/A';\n                }\n                let showLink = packageUrl + '/' + row.package.id;\n                return '<a href=\"' + showLink + '\">' + row.package.name +\n                    '</a>';\n            },\n            name: 'package.name',\n        },\n        {\n            data: function (row) {\n                if (isEmpty(row.insurance_id)) {\n                    return 'N/A';\n                }\n                let showLink = insuranceUrl + '/' + row.insurance.id;\n                return '<a href=\"' + showLink + '\">' + row.insurance.name +\n                    '</a>';\n            },\n            name: 'insurance.name',\n        },\n        {\n            data: function (row) {\n                return isEmpty(row.policy_no) ? 'N/A' : row.policy_no;\n            },\n            name: 'policy_no',\n        },\n        {\n            data: function (row) {\n                return row.status == 0 ? 'Deactive' : 'Active';\n            },\n            name: 'status',\n        },\n    ],\n    'fnInitComplete': function () {\n        $('#filter_status').change(function () {\n            $(patientAdmissionsTable).DataTable().ajax.reload(null, true);\n        });\n    },\n});\n\n\n"],"sourceRoot":""}