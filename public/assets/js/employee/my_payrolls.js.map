{"version":3,"sources":["webpack:///./resources/assets/js/employee/my_payrolls.js"],"names":["$","DataTable","processing","serverSide","ajax","url","employeePayrollUrl","columnDefs","targets","defaultContent","columns","data","row","payrollUrl","id","payroll_id","name","isEmpty","basic_salary","getCurrentCurrencyClass","addCommas","allowance","deductions","net_salary","status"],"mappings":"mBAEUA,EAAE,0BAA0BC,UAAU,CAC5CC,YAAY,EACZC,YAAY,EACZ,MAAS,CAAC,CAAC,EAAG,QACdC,KAAM,CACFC,IAAKC,oBAETC,WAAY,CACR,CACI,QAAW,CAAC,GACZ,UAAa,eAEjB,CACI,QAAW,CAAC,EAAG,EAAG,EAAG,GACrB,UAAa,cAEjB,CACI,QAAW,CAAC,GACZ,WAAa,EACb,UAAa,eAEjB,CACIC,QAAS,OACTC,eAAgB,QAGxBC,QAAS,CACL,CACIC,KAAM,SAAUC,GAEZ,MAAO,aADQC,WAAa,IAAMD,EAAIE,IACN,KAAOF,EAAIG,WAAa,QAE5DC,KAAM,cAEV,CACIL,KAAM,QACNK,KAAM,SAEV,CACIL,KAAM,OACNK,KAAM,QAEV,CACIL,KAAM,SAAUC,GACZ,OAAQK,QAAQL,EAAIM,cAEuB,MAFP,yBAChCC,0BAA4B,IAC5BC,UAAUR,EAAIM,cAAgB,QAEtCF,KAAM,gBAEV,CACIL,KAAM,SAAUC,GACZ,OAAQK,QAAQL,EAAIS,WAEoB,MAFP,yBAC7BF,0BAA4B,IAC5BC,UAAUR,EAAIS,WAAa,QAEnCL,KAAM,aAEV,CACIL,KAAM,SAAUC,GACZ,OAAQK,QAAQL,EAAIU,YAEqB,MAFP,yBAC9BH,0BAA4B,IAC5BC,UAAUR,EAAIU,YAAc,QAEpCN,KAAM,cAEV,CACIL,KAAM,SAAUC,GACZ,OAAQK,QAAQL,EAAIW,YAEqB,MAFP,yBAC9BJ,0BAA4B,IAC5BC,UAAUR,EAAIW,YAAc,QAEpCP,KAAM,cAEV,CACIL,KAAM,SAAUC,GACZ,OAAkB,GAAdA,EAAIY,OACG,OAEA,UAEfR,KAAM,kB","file":"/assets/js/employee/my_payrolls.js","sourcesContent":["'use strict';\n\nlet tbl = $('#employeePayrollsTable').DataTable({\n    processing: true,\n    serverSide: true,\n    'order': [[0, 'asc']],\n    ajax: {\n        url: employeePayrollUrl,\n    },\n    columnDefs: [\n        {\n            'targets': [0],\n            'className': 'text-center',\n        },\n        {\n            'targets': [3, 4, 5, 6],\n            'className': 'text-right',\n        },\n        {\n            'targets': [7],\n            'orderable': false,\n            'className': 'text-center',\n        },\n        {\n            targets: '_all',\n            defaultContent: 'N/A',\n        },\n    ],\n    columns: [\n        {\n            data: function (row) {\n                let showLink = payrollUrl + '/' + row.id;\n                return '<a href=\"' + showLink + '\">' + row.payroll_id + '</a>';\n            },\n            name: 'payroll_id',\n        },\n        {\n            data: 'month',\n            name: 'month',\n        },\n        {\n            data: 'year',\n            name: 'year',\n        },\n        {\n            data: function (row) {\n                return !isEmpty(row.basic_salary) ? '<p class=\"cur-margin\">' +\n                    getCurrentCurrencyClass() + ' ' +\n                    addCommas(row.basic_salary) + '</p>' : 'N/A';\n            },\n            name: 'basic_salary',\n        },\n        {\n            data: function (row) {\n                return !isEmpty(row.allowance) ? '<p class=\"cur-margin\">' +\n                    getCurrentCurrencyClass() + ' ' +\n                    addCommas(row.allowance) + '</p>' : 'N/A';\n            },\n            name: 'allowance',\n        },\n        {\n            data: function (row) {\n                return !isEmpty(row.deductions) ? '<p class=\"cur-margin\">' +\n                    getCurrentCurrencyClass() + ' ' +\n                    addCommas(row.deductions) + '</p>' : 'N/A';\n            },\n            name: 'deductions',\n        },\n        {\n            data: function (row) {\n                return !isEmpty(row.net_salary) ? '<p class=\"cur-margin\">' +\n                    getCurrentCurrencyClass() + ' ' +\n                    addCommas(row.net_salary) + '</p>' : 'N/A';\n            },\n            name: 'net_salary',\n        },\n        {\n            data: function (row) {\n                if (row.status == 1)\n                    return 'Paid';\n                else\n                    return 'Unpaid';\n            },\n            name: 'net_salary',\n        },\n    ],\n});\n"],"sourceRoot":""}